from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score,precision_score,recall_score,f1_score,roc_auc_score,confusion_matrix,classification_report

iris=load_iris()
x=iris.data
y=iris.target

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)

log_reg=LogisticRegression(max_iter=1000)

log_reg.fit(x_train,y_train)

y_pred=log_reg.predict(x_test)

accuracy=round(accuracy_score(y_test,y_pred)*100,2)
print("accuracy:",accuracy)

precision=precision_score(y_test,y_pred,average='weighted')
print("precision:",precision)

recall=recall_score(y_test,y_pred,average='weighted')
print("recall:",recall)

f1=f1_score(y_test,y_pred,average='weighted')
print("f1_score:",f1)

roc_auc=roc_auc_score(y_test,log_reg.predict_proba(x_test),multi_class='ovr')
print("ROC AUC Scotr:",roc_auc)

conf_matrix=confusion_matrix(y_test,y_pred)
print("Confusion matrix:\n",conf_matrix)

result1=classification_report(y_test,y_pred)
print("classification report:\n",result1)
